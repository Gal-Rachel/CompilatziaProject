
# Function with multiple parameters of same type and default values
def foo(int x, y; float z:3)-> string:{
    int i;
   # g=5;
    string name = "GalShmuel";
    float m = 3.14, n = 9.8;
   # x = "string";  # Error: cannot assign string to int
   # y = true;      # Error: cannot assign bool to int
    x = 5;         # OK: both int
    #x = 3.14;      # Error: cannot assign float to int
    z = 5;         # OK: int can be assigned to float
    #z = "hello";   # 
    x =5;
   #x = "string";
    y=3;
   # y=true;
    x =5+3;
    z = 5+3.0;
    z = 6.0+3.0;
    #x = "5"+2;
    #x = true+3;
    return name[1:4:1];
}


# Main function (required)
def __main__(): {
    string z="string";
    float m=0.5;
    float f=4;
    bool isit = f!=m;
    while(true):{
       string bb; 
    }

    if(5.5<=3.1):{
        string fdf;
    }
    if(5 >"hello"):{
        string fdf;
    }
    while(not 43):{
        string ddd;
    }
    while( true and 43):{
        string ddd;
    }  while(false or  43):{
        string ddd;
    }
    #foo();      # Error: Too few arguments (should return error)
    #foo(2);     # OK: y and z have defaults
    foo(1,3,5);   # OK: z has default
    foo(1,2); # OK: all arguments provided
    #foo(1,2,3,4); # Error: Too many arguments
    pass;
    #return 2;
}
